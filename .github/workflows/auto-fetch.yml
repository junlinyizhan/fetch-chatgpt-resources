name: Fetch ChatGPT Resources

on:
  schedule:
    # 每15分钟运行一次
    - cron: '*/15 * * * *'
  workflow_dispatch: # 允许手动触发

jobs:
  fetch-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout public repo
      uses: actions/checkout@v4
    
    - name: Clone private repo
      run: |
        # 使用PAT克隆私有仓库
        git clone https://${{ secrets.PAT_TOKEN }}@github.com/${{ secrets.PRIVATE_REPO }}.git private-repo
        cd private-repo
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git config user.name "github-actions[bot]"
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Install dependencies
      working-directory: ./private-repo
      run: npm install
    
    - name: Install Puppeteer dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          ca-certificates \
          fonts-liberation \
          libappindicator3-1 \
          libatk-bridge2.0-0 \
          libatk1.0-0 \
          libc6 \
          libcairo2 \
          libcups2 \
          libdbus-1-3 \
          libexpat1 \
          libfontconfig1 \
          libgbm1 \
          libgcc1 \
          libglib2.0-0 \
          libgtk-3-0 \
          libnspr4 \
          libnss3 \
          libpango-1.0-0 \
          libpangocairo-1.0-0 \
          libstdc++6 \
          libx11-6 \
          libx11-xcb1 \
          libxcb1 \
          libxcomposite1 \
          libxcursor1 \
          libxdamage1 \
          libxext6 \
          libxfixes3 \
          libxi6 \
          libxrandr2 \
          libxrender1 \
          libxss1 \
          libxtst6 \
          lsb-release \
          wget \
          xdg-utils
    
    - name: Run auto-fetch script
      id: fetch
      working-directory: ./private-repo
      run: |
        OUTPUT=$(node auto-fetch-once.js 2>&1)
        echo "$OUTPUT"
        VERSION=$(echo "$OUTPUT" | grep "VERSION_OUTPUT=" | cut -d'=' -f2)
        if [ ! -z "$VERSION" ]; then
          echo "version=$VERSION" >> $GITHUB_OUTPUT
        fi
      env:
        CI: true
    
    - name: Check for changes
      id: check_changes
      working-directory: ./private-repo
      run: |
        if [[ -n $(git status --porcelain resources/) ]]; then
          echo "changes=true" >> $GITHUB_OUTPUT
          echo "Found changes in resources directory"
        else
          echo "changes=false" >> $GITHUB_OUTPUT
          echo "No changes in resources directory"
        fi
    
    - name: Commit and push to private repo
      if: steps.check_changes.outputs.changes == 'true'
      working-directory: ./private-repo
      run: |
        # 只添加resources目录
        git add resources/
        VERSION="${{ steps.fetch.outputs.version }}"
        if [ ! -z "$VERSION" ]; then
          git commit -m "静态版本：$VERSION"
        else
          git commit -m "静态版本：更新"
        fi
        # 推送到私有仓库
        git push origin main
